@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* Allows us to include padding and border to an elements width and height. */
    font-family: "Poppins", sans-serif;
}

body{
    background-color: #e3f2fd;
}

.container{
    position: relative; /* This defines the positioning method, used in tandem with top, bottom, left, right. */
    max-width: 480px;
    width: 100%;
    border-radius: 8px; /* Gives the border curves at the edge */
    padding: 25px; /* Padding is used to create space around an element's content, inside of any defined borders. */
    margin: 85px auto 0; /* Margins are used to create space around elements, outside of any defined borders. */
    background-color: #fff;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
}

.container .input-field{
    position: relative;
    height: 64px;
    width: 100%;
}

.input-field textarea{
    height: 100%;
    width: 100%;
    outline: none;
    font-size: 18px;
    font-weight: 400;
    border-radius: 8px;
    padding: 18px 45px 18px 15px; /* the 4 numbers represent distance from top, right, bottom, left */
    border: 1px solid #ccc;
    resize: none; /* Prevents anyone from resizing the text area */ 
}

.input-field textarea:focus{ /* The focus selector determines the style after the element is 'selected'  */
    border-color: #4070f4;
}

textarea::-webkit-scrollbar{
    display: none; /* Removes the scrollbar from the text area */
}

.input-field .bx-notepad{
    position: absolute;
    top: 50%;
    right: 15px;
    transform: translateY(-50%);
    pointer-events: none; /* Whether or not the element reacts to pointer events */
    font-size: 24px;
    color: #707070;
}

/* Syntax: element/class to be interacted with (.input-field textarea) + selector (:focus ~) + element/class to be changed (.bx-notepad) */
.input-field textarea:focus ~ .bx-notepad{ /* This basically says once you've focused on the text area, then do something to the notepad class*/
    color: #4070f4; /* The ~ selector basically connects the text area to the notepad. (Once an action is done on the text area, then change something in the notepad) */
}

.container .todolists{
    max-height: 380px;
    overflow-y: auto;
    padding-right: 10px;
}

.todolists .list{
    display: flex;
    align-items: center;
    list-style: none;
    background-color: #f2f2f2;
    padding: 20px 15px;
    border-radius: 8px;   
    margin-top: 10px;
    position: relative;
    cursor: pointer;
}

.todolists .list input{
    height: 16px;
    min-width: 16px;
    accent-color: #4070f6;
    pointer-events: none;
}

.todolists .list .task{
    margin: 0 30px 0 15px;
    word-break: break-all;
}

.list input:checked ~ .task{
    text-decoration: line-through;
}

.todolists .list i{
    position: absolute;
    top: 50%;
    right: 15px;
    transform: translateY(-50%);
    font-size: 20px;
    color: #707070;
    padding: 5px;
    opacity: 0.6;
    display: none;
}


.todolists .list:hover i{/* This line says, once you hover over .list, then make a change to the following i */
    display: inline-flex;
}

/* Syntax: element/class to be interacted with and then changed (.todolists .list i) + selector (:hover) */ 
.todolists .list i:hover{/* This says once you hover over i, then make a change to that same i */
    opacity: 1;
}

.container .pending-tasks{
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 25px;
}

.pending-tasks span{
    color: #333;
}

.pending-tasks .clear-button{
    padding: 6px 12px;
    outline: none;
    border: none;
    background: #4070f4;
    color: #fff;
    font-size: 14px;
    border-radius: 4px;
    cursor: pointer;
    pointer-events: none;
}

.clear-button:hover{
    background-color: #0e4bf1;
}